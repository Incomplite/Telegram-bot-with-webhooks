from datetime import datetime, timedelta

from aiogram.types import Message

from src.bot.keyboards import main_keyboard
from src.database import AvailableTimeSlot, Photo
from src.database.db import get_db


def get_photos():
    with get_db() as db:
        photos = db.query(Photo).all()
    return photos


async def greet_user(message: Message, is_new_user: bool) -> None:
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    greeting = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" if is_new_user else "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º"
    status = "\n–•–æ—Ç–µ–ª–∏ –ª–∏ –±—ã –í—ã —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å?üåº" if is_new_user else "\n–†–∞–¥ –≤–∏–¥–µ—Ç—å –í–∞—Å —Å–Ω–æ–≤–∞!"
    message_text = f"{greeting}, <b>{message.from_user.full_name}</b>! {status}"
    if not is_new_user:
        message_text += "\n–ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?üåº"
    await message.answer(
        message_text,
        reply_markup=main_keyboard(user_id=message.from_user.id, first_name=message.from_user.first_name)
    )


async def delete_old_schedule_entries():
    threshold_date = datetime.now().date() + timedelta(days=1)
    print(f"–ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ä—à–µ {threshold_date}")
    with get_db() as db:
        db.query(AvailableTimeSlot).filter(AvailableTimeSlot.date < threshold_date).delete()
        db.commit()
    print("–°—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.")
